name: CI

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches:
      - master
      - main
      - develop
    types: [opened, synchronize, reopened]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
      - uses: actions/checkout@v3
      # - name: Use Node.js 16.x
      - uses: actions/setup-node@v3
        with:
          node-version: 18.17.x
          cache: 'yarn'

      - name: ðŸ§° Install dependencies
        run: yarn install

      - name: ðŸ§¹ Run lint
        run: yarn next lint

  type-check:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
      - uses: actions/checkout@v3
      # - name: Use Node.js 16.x
      - uses: actions/setup-node@v3
        with:
          node-version: 18.17.x
          cache: 'yarn'

      - name: ðŸ§° Install dependencies
        run: yarn install

      - name: ðŸ”§ Check validity of types
        run: yarn tsc --noEmit --pretty

  test:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
      - uses: actions/checkout@v3
      # - name: Use Node.js 16.x
      - uses: actions/setup-node@v3
        with:
          node-version: 18.17.x
          cache: 'yarn'

      - name: ðŸ§° Install dependencies
        run: yarn install

      - name: ðŸ§ª Run tests
        run: yarn test:component:headless

  build:
    needs: [lint, type-check]
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
      - uses: actions/checkout@v3
      # - name: Use Node.js 16.x
      - uses: actions/setup-node@v3
        with:
          node-version: 18.17.x
          cache: 'yarn'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      - name: ðŸ§° Install dependencies
        run: yarn install

      - name: ðŸ“¦ Build project
        run: yarn build
