name: CI

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches:
      - master
      - main
      - develop
    types: [opened, synchronize, reopened]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 18.15.x
          cache: "pnpm"

      - name: ðŸ§° Install dependencies
        run: pnpm install

      - name: ðŸ§¹ Run lint
        run: pnpm next lint

  type-check:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 18.15.x
          cache: "pnpm"

      - name: ðŸ§° Install dependencies
        run: pnpm install

      - name: ðŸ”§ Check validity of types
        run: pnpm tsc --noEmit --pretty

  test:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 18.15.x
          cache: "pnpm"

      - name: ðŸ§° Install dependencies
        run: pnpm install

      - name: ðŸ§ª Run tests
        run: pnpm test:component:headless

  build:
    needs: [lint, type-check]
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 18.15.x
          cache: "pnpm"

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: |
            ${{ env.STORE_PATH }}
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: ðŸ§° Install dependencies
        run: pnpm install

      - name: ðŸ“¦ Build project
        run: pnpm build
